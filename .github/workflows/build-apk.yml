name: Android Debug APK

on:
  workflow_dispatch:
  push:
    tags: ['v*.*.*']

env:
  FLUTTER_PROJECT_DIR: coop_control_app_reports

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Flutter (stable)
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Install Android packages
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platforms;android-34" "build-tools;34.0.0" "platform-tools"

      - name: Ensure android folder exists
        working-directory: ./${{ env.FLUTTER_PROJECT_DIR }}
        run: |
          echo "PWD=$(pwd)"; ls -la
          if [ ! -f "pubspec.yaml" ]; then
            echo "❌ Falta pubspec.yaml en este directorio"; exit 1; fi
          if [ ! -d "android" ]; then
            echo "Generando android/…"; flutter create . --platforms=android; fi
          ls -la android || true
          test -f android/app/build.gradle -o -f android/app/build.gradle.kts \
            || (echo "❌ Falta android/app/build.gradle(.kts)"; exit 1)
          test -f android/build.gradle -o -f android/build.gradle.kts \
            || (echo "❌ Falta android/build.gradle(.kts)"; exit 1)

      - name: Align Gradle wrapper + basics
        working-directory: ./${{ env.FLUTTER_PROJECT_DIR }}/android
        run: |
          set -e
          # Wrapper: Gradle 8.7 para AGP recientes
          mkdir -p gradle/wrapper
          cat > gradle/wrapper/gradle-wrapper.properties <<'EOF'
          distributionUrl=https\://services.gradle.org/distributions/gradle-8.7-bin.zip
          EOF

          # Propiedades: AndroidX/Jetifier y memoria
          cat > gradle.properties <<'EOF'
          org.gradle.jvmargs=-Xmx4g -Dkotlin.daemon.jvm.options=-Xmx2g
          android.useAndroidX=true
          android.enableJetifier=true
          kotlin.code.style=official
          EOF

          # Subir minSdk a 21 en Groovy o Kotlin DSL (sin tocar otras claves)
          APP=app/build.gradle; DSL=groovy
          if [ -f "app/build.gradle.kts" ]; then APP=app/build.gradle.kts; DSL=kts; fi
          if [ "$DSL" = "kts" ]; then
            sed -i -E 's/minSdk( *[=:])* *[0-9]+/minSdk = 21/' "$APP" || true
          else
            sed -i -E 's/minSdkVersion *[0-9]+/minSdkVersion 21/' "$APP" || true
            sed -i -E 's/minSdk *[0-9]+/minSdk 21/' "$APP" || true
          fi

      - name: flutter pub get
        working-directory: ./${{ env.FLUTTER_PROJECT_DIR }}
        run: flutter pub get

      - name: Build debug APK (no shrink)
        working-directory: ./${{ env.FLUTTER_PROJECT_DIR }}
        run: flutter build apk --debug --no-shrink --verbose

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: ${{ env.FLUTTER_PROJECT_DIR }}/build/app/outputs/flutter-apk/app-debug.apk

      - name: Upload android tree (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-tree
          path: ${{ env.FLUTTER_PROJECT_DIR }}/android
