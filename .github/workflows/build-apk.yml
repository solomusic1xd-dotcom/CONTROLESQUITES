name: Android Debug APK

on:
  workflow_dispatch:
  push:
    tags: ['v*.*.*']

env:
  # Carpeta que contiene pubspec.yaml y lib/
  FLUTTER_PROJECT_DIR: coop_control_app_reports

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Flutter (stable)
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Install Android packages
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platforms;android-34" "build-tools;34.0.0" "platform-tools"

      # Asegura carpeta correcta y crea android/ cuando falta
      - name: Ensure android folder exists
        working-directory: ./${{ env.FLUTTER_PROJECT_DIR }}
        run: |
          echo "PWD = $(pwd)"
          ls -la
          if [ ! -f "pubspec.yaml" ]; then
            echo "❌ Falta pubspec.yaml en $PWD"
            exit 1
          fi

          if [ ! -d "android" ]; then
            echo "Generación de carpeta android/…"
            flutter create . --platforms=android
          fi

          echo "Árbol de android/:"
          ls -la android || true

          # Valida presencia de archivos .gradle o .gradle.kts
          test -f android/app/build.gradle -o -f android/app/build.gradle.kts \
            || (echo "❌ Falta android/app/build.gradle(.kts)"; exit 1)
          test -f android/build.gradle -o -f android/build.gradle.kts \
            || (echo "❌ Falta android/build.gradle(.kts)"; exit 1)

      - name: Patch Android gradle files (safe)
        working-directory: ./${{ env.FLUTTER_PROJECT_DIR }}/android
        run: |
          set -e

          # Wrapper Gradle 8.6 (válido para AGP modernos)
          mkdir -p gradle/wrapper
          cat > gradle/wrapper/gradle-wrapper.properties <<'EOF'
          distributionUrl=https\://services.gradle.org/distributions/gradle-8.6-bin.zip
          EOF

          # gradle.properties
          cat > gradle.properties <<'EOF'
          org.gradle.jvmargs=-Xmx4g -Dkotlin.daemon.jvm.options=-Xmx2g
          android.useAndroidX=true
          android.enableJetifier=true
          kotlin.code.style=official
          EOF

          # Detecta dialecto (Groovy vs Kotlin DSL) para app/
          APP_GRADLE="app/build.gradle"
          DSL="groovy"
          if [ -f "app/build.gradle.kts" ]; then
            APP_GRADLE="app/build.gradle.kts"
            DSL="kts"
          fi

          echo "Archivo de la app: $APP_GRADLE (DSL=$DSL)"

          if [ "$DSL" = "kts" ]; then
            # --- Kotlin DSL (.kts) ---

            # namespace
            if grep -q '^[[:space:]]*namespace[[:space:]]*=' "$APP_GRADLE"; then
              sed -i 's/^[[:space:]]*namespace[[:space:]]*=.*/    namespace = "com.controlesquites.app"/' "$APP_GRADLE"
            else
              sed -i '0,/android *\{/{s//android {\n    namespace = "com.controlesquites.app"/}' "$APP_GRADLE"
            fi

            # compileSdk, minSdk, targetSdk
            sed -i -E 's/compileSdk( *[=:])* *[0-9]+/compileSdk = 34/' "$APP_GRADLE" || true
            sed -i -E 's/minSdk( *[=:])* *[0-9]+/minSdk = 21/' "$APP_GRADLE" || true
            sed -i -E 's/targetSdk( *[=:])* *[0-9]+/targetSdk = 34/' "$APP_GRADLE" || true

            # defaultConfig: applicationId y multidex
            if ! grep -q 'applicationId[[:space:]]*=' "$APP_GRADLE"; then
              sed -i 's/defaultConfig *{/[&\n        applicationId = "com.controlesquites.app"/' "$APP_GRADLE"
            fi
            if ! grep -q 'multiDexEnabled[[:space:]]*=' "$APP_GRADLE"; then
              sed -i 's/defaultConfig *{/[&\n        multiDexEnabled = true/' "$APP_GRADLE"
            fi

            # dependencia multidex
            grep -q 'androidx.multidex:multidex' "$APP_GRADLE" \
              || sed -i 's/dependencies *{/dependencies {\n    implementation("androidx.multidex:multidex:2.0.1")/' "$APP_GRADLE"

          else
            # --- Groovy (.gradle) ---

            # namespace
            if grep -q '^[[:space:]]*namespace ' "$APP_GRADLE"; then
              sed -i 's/^[[:space:]]*namespace .*/    namespace "com.controlesquites.app"/' "$APP_GRADLE"
            else
              sed -i '0,/android *{/{s//android {\n    namespace "com.controlesquites.app"/}' "$APP_GRADLE"
            fi

            # compileSdk, minSdk, targetSdk
            sed -i 's/compileSdkVersion *[0-9]\+/compileSdkVersion 34/' "$APP_GRADLE" || true
            sed -i 's/compileSdk *[0-9]\+/compileSdk 34/' "$APP_GRADLE" || true
            sed -i 's/minSdkVersion *[0-9]\+/minSdkVersion 21/' "$APP_GRADLE" || true
            sed -i 's/minSdk *[0-9]\+/minSdk 21/' "$APP_GRADLE" || true
            sed -i 's/targetSdkVersion *[0-9]\+/targetSdkVersion 34/' "$APP_GRADLE" || true
            sed -i 's/targetSdk *[0-9]\+/targetSdk 34/' "$APP_GRADLE" || true

            # multidex + applicationId
            grep -q "multiDexEnabled" "$APP_GRADLE" || sed -i 's/defaultConfig {/defaultConfig {\n        multiDexEnabled true/' "$APP_GRADLE"
            grep -q 'applicationId "' "$APP_GRADLE" || sed -i 's/defaultConfig {/defaultConfig {\n        applicationId "com.controlesquites.app"/' "$APP_GRADLE"
            grep -q "androidx.multidex:multidex" "$APP_GRADLE" || sed -i 's/dependencies {/dependencies {\n    implementation "androidx.multidex:multidex:2.0.1"/' "$APP_GRADLE"
          fi

      - name: flutter pub get
        working-directory: ./${{ env.FLUTTER_PROJECT_DIR }}
        run: flutter pub get

      - name: Build debug APK (no shrink)
        working-directory: ./${{ env.FLUTTER_PROJECT_DIR }}
        run: flutter build apk --debug --no-shrink --verbose

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: ${{ env.FLUTTER_PROJECT_DIR }}/build/app/outputs/flutter-apk/app-debug.apk

      - name: Upload android tree (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-tree
          path: ${{ env.FLUTTER_PROJECT_DIR }}/android
