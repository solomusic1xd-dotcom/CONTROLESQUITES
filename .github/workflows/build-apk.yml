name: Android Debug APK

on:
  workflow_dispatch:
  push:
    tags: ['v*.*.*']

env:
  FLUTTER_PROJECT_DIR: coop_control_app_reports

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Flutter (stable)
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Install Android packages
        run: |
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" \
                     "platforms;android-35" "build-tools;35.0.0" \
                     "platforms;android-34" "build-tools;34.0.0"

      - name: Ensure android folder exists
        working-directory: ./${{ env.FLUTTER_PROJECT_DIR }}
        run: |
          ls -la
          test -f pubspec.yaml || { echo "Falta pubspec.yaml"; exit 1; }
          [ -d android ] || flutter create . --platforms=android
          test -f android/app/build.gradle -o -f android/app/build.gradle.kts || { echo "Falta app/build.gradle(.kts)"; exit 1; }
          test -f android/build.gradle -o -f android/build.gradle.kts || { echo "Falta build.gradle(.kts)"; exit 1; }

      - name: Align Gradle and SDK levels
        working-directory: ./${{ env.FLUTTER_PROJECT_DIR }}/android
        run: |
          set -e
          mkdir -p gradle/wrapper
          cat > gradle/wrapper/gradle-wrapper.properties <<'EOF'
          distributionUrl=https\://services.gradle.org/distributions/gradle-8.7-bin.zip
          EOF

          cat > gradle.properties <<'EOF'
          org.gradle.jvmargs=-Xmx4g -Dkotlin.daemon.jvm.options=-Xmx2g
          android.useAndroidX=true
          android.enableJetifier=true
          kotlin.code.style=official
          EOF

          APP=app/build.gradle; DSL=groovy
          if [ -f "app/build.gradle.kts" ]; then APP=app/build.gradle.kts; DSL=kts; fi
          echo "Parche en $APP (DSL=$DSL)"

          if [ "$DSL" = "kts" ]; then
            # Kotlin DSL
            sed -i -E 's/compileSdk( *[=:])* *[0-9]+/compileSdk = 35/' "$APP" || true
            sed -i -E 's/targetSdk( *[=:])* *[0-9]+/targetSdk = 35/' "$APP" || true
            sed -i -E 's/minSdk( *[=:])* *[0-9]+/minSdk = 21/' "$APP" || true
            if ! grep -q 'namespace[[:space:]]*=' "$APP"; then
              sed -i '0,/android *\{/{s//android {\n    namespace = "com.controlesquites.app"/}' "$APP"
            fi
          else
            # Groovy
            sed -i -E 's/compileSdkVersion *[0-9]+/compileSdkVersion 35/' "$APP" || true
            sed -i -E 's/compileSdk *[0-9]+/compileSdk 35/' "$APP" || true
            sed -i -E 's/targetSdkVersion *[0-9]+/targetSdkVersion 35/' "$APP" || true
            sed -i -E 's/targetSdk *[0-9]+/targetSdk 35/' "$APP" || true
            sed -i -E 's/minSdkVersion *[0-9]+/minSdkVersion 21/' "$APP" || true
            sed -i -E 's/minSdk *[0-9]+/minSdk 21/' "$APP" || true
            if ! grep -q '^[[:space:]]*namespace ' "$APP"; then
              sed -i '0,/android *{/{s//android {\n    namespace "com.controlesquites.app"/}' "$APP"
            fi
          fi

      - name: flutter pub get
        working-directory: ./${{ env.FLUTTER_PROJECT_DIR }}
        run: flutter pub get

      - name: Build debug APK (no shrink)
        working-directory: ./${{ env.FLUTTER_PROJECT_DIR }}
        run: flutter build apk --debug --no-shrink --verbose

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: ${{ env.FLUTTER_PROJECT_DIR }}/build/app/outputs/flutter-apk/app-debug.apk

      - name: Upload android tree (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-tree
          path: ${{ env.FLUTTER_PROJECT_DIR }}/android
